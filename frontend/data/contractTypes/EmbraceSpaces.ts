/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";

export declare namespace EmbraceSpaces {
  export type MembershipGateStruct = {
    token: PromiseOrValue<BigNumberish>;
    tokenAddress: PromiseOrValue<string>;
  };

  export type MembershipGateStructOutput = [number, string] & {
    token: number;
    tokenAddress: string;
  };

  export type MembershipStruct = {
    access: PromiseOrValue<BigNumberish>;
    gate: EmbraceSpaces.MembershipGateStruct;
    allowRequests: PromiseOrValue<boolean>;
  };

  export type MembershipStructOutput = [
    number,
    EmbraceSpaces.MembershipGateStructOutput,
    boolean
  ] & {
    access: number;
    gate: EmbraceSpaces.MembershipGateStructOutput;
    allowRequests: boolean;
  };

  export type SpaceStruct = {
    id: PromiseOrValue<BigNumberish>;
    handle: PromiseOrValue<string>;
    founder: PromiseOrValue<string>;
    visibility: PromiseOrValue<BigNumberish>;
    membership: EmbraceSpaces.MembershipStruct;
    apps: PromiseOrValue<BigNumberish>[];
    metadata: PromiseOrValue<string>;
  };

  export type SpaceStructOutput = [
    BigNumber,
    string,
    string,
    number,
    EmbraceSpaces.MembershipStructOutput,
    BigNumber[],
    string
  ] & {
    id: BigNumber;
    handle: string;
    founder: string;
    visibility: number;
    membership: EmbraceSpaces.MembershipStructOutput;
    apps: BigNumber[];
    metadata: string;
  };

  export type MemberStruct = {
    isAdmin: PromiseOrValue<boolean>;
    isActive: PromiseOrValue<boolean>;
    isRequest: PromiseOrValue<boolean>;
  };

  export type MemberStructOutput = [boolean, boolean, boolean] & {
    isAdmin: boolean;
    isActive: boolean;
    isRequest: boolean;
  };
}

export interface EmbraceSpacesInterface extends utils.Interface {
  functions: {
    "createSpace(string,uint8,(uint8,(uint8,address),bool),uint128[],string)": FunctionFragment;
    "getIdFromHandle(string)": FunctionFragment;
    "getMemberCount(uint256)": FunctionFragment;
    "getSpace(uint256)": FunctionFragment;
    "getSpaceFromHandle(string)": FunctionFragment;
    "getSpaceMember(uint256,address)": FunctionFragment;
    "getSpaceMembers(uint256)": FunctionFragment;
    "getSpaces()": FunctionFragment;
    "isAdmin(uint256)": FunctionFragment;
    "isAdminExternal(uint256,address)": FunctionFragment;
    "isFounder(uint256)": FunctionFragment;
    "isFounderExternal(uint256,address)": FunctionFragment;
    "joinSpace(uint256)": FunctionFragment;
    "meetsGateRequirements(uint256)": FunctionFragment;
    "requestJoin(uint256)": FunctionFragment;
    "setFounder(uint256,address)": FunctionFragment;
    "setMember(uint256,address,bool,bool)": FunctionFragment;
    "spaceHandleToId(bytes32)": FunctionFragment;
    "spaceMemberLength(uint256)": FunctionFragment;
    "spaceMembers(uint256,address)": FunctionFragment;
    "spaceMembersArray(uint256,uint256)": FunctionFragment;
    "spaces(uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "createSpace"
      | "getIdFromHandle"
      | "getMemberCount"
      | "getSpace"
      | "getSpaceFromHandle"
      | "getSpaceMember"
      | "getSpaceMembers"
      | "getSpaces"
      | "isAdmin"
      | "isAdminExternal"
      | "isFounder"
      | "isFounderExternal"
      | "joinSpace"
      | "meetsGateRequirements"
      | "requestJoin"
      | "setFounder"
      | "setMember"
      | "spaceHandleToId"
      | "spaceMemberLength"
      | "spaceMembers"
      | "spaceMembersArray"
      | "spaces"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "createSpace",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      EmbraceSpaces.MembershipStruct,
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getIdFromHandle",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getMemberCount",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getSpace",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getSpaceFromHandle",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getSpaceMember",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getSpaceMembers",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(functionFragment: "getSpaces", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "isAdmin",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isAdminExternal",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isFounder",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isFounderExternal",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "joinSpace",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "meetsGateRequirements",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "requestJoin",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setFounder",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setMember",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<boolean>,
      PromiseOrValue<boolean>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "spaceHandleToId",
    values: [PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "spaceMemberLength",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "spaceMembers",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "spaceMembersArray",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "spaces",
    values: [PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "createSpace",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIdFromHandle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMemberCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getSpace", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getSpaceFromHandle",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSpaceMember",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSpaceMembers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getSpaces", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "isAdmin", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isAdminExternal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isFounder", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isFounderExternal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "joinSpace", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "meetsGateRequirements",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "requestJoin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setFounder", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setMember", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "spaceHandleToId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "spaceMemberLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "spaceMembers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "spaceMembersArray",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "spaces", data: BytesLike): Result;

  events: {
    "JoinedSpace(uint256,address,bool)": EventFragment;
    "RemovedFromSpace(uint256,address)": EventFragment;
    "RequestJoinSpace(uint256,address)": EventFragment;
    "SpaceCreated(uint256,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "JoinedSpace"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RemovedFromSpace"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RequestJoinSpace"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SpaceCreated"): EventFragment;
}

export interface JoinedSpaceEventObject {
  spaceId: BigNumber;
  memberAddress: string;
  isAdmin: boolean;
}
export type JoinedSpaceEvent = TypedEvent<
  [BigNumber, string, boolean],
  JoinedSpaceEventObject
>;

export type JoinedSpaceEventFilter = TypedEventFilter<JoinedSpaceEvent>;

export interface RemovedFromSpaceEventObject {
  spaceId: BigNumber;
  memberAddress: string;
}
export type RemovedFromSpaceEvent = TypedEvent<
  [BigNumber, string],
  RemovedFromSpaceEventObject
>;

export type RemovedFromSpaceEventFilter =
  TypedEventFilter<RemovedFromSpaceEvent>;

export interface RequestJoinSpaceEventObject {
  spaceId: BigNumber;
  memberAddress: string;
}
export type RequestJoinSpaceEvent = TypedEvent<
  [BigNumber, string],
  RequestJoinSpaceEventObject
>;

export type RequestJoinSpaceEventFilter =
  TypedEventFilter<RequestJoinSpaceEvent>;

export interface SpaceCreatedEventObject {
  spaceId: BigNumber;
  founder: string;
}
export type SpaceCreatedEvent = TypedEvent<
  [BigNumber, string],
  SpaceCreatedEventObject
>;

export type SpaceCreatedEventFilter = TypedEventFilter<SpaceCreatedEvent>;

export interface EmbraceSpaces extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: EmbraceSpacesInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    createSpace(
      _handle: PromiseOrValue<string>,
      _visibility: PromiseOrValue<BigNumberish>,
      _membership: EmbraceSpaces.MembershipStruct,
      _apps: PromiseOrValue<BigNumberish>[],
      _metadata: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getIdFromHandle(
      _handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMemberCount(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getSpace(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[EmbraceSpaces.SpaceStructOutput]>;

    getSpaceFromHandle(
      _handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[EmbraceSpaces.SpaceStructOutput]>;

    getSpaceMember(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[EmbraceSpaces.MemberStructOutput]>;

    getSpaceMembers(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    getSpaces(
      overrides?: CallOverrides
    ): Promise<[EmbraceSpaces.SpaceStructOutput[]]>;

    isAdmin(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isAdminExternal(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isFounder(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isFounderExternal(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    joinSpace(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    meetsGateRequirements(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    requestJoin(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setFounder(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setMember(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      _isActive: PromiseOrValue<boolean>,
      _isAdmin: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    spaceHandleToId(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    spaceMemberLength(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    spaceMembers(
      arg0: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [boolean, boolean, boolean] & {
        isAdmin: boolean;
        isActive: boolean;
        isRequest: boolean;
      }
    >;

    spaceMembersArray(
      arg0: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    spaces(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        string,
        string,
        number,
        EmbraceSpaces.MembershipStructOutput,
        string
      ] & {
        id: BigNumber;
        handle: string;
        founder: string;
        visibility: number;
        membership: EmbraceSpaces.MembershipStructOutput;
        metadata: string;
      }
    >;
  };

  createSpace(
    _handle: PromiseOrValue<string>,
    _visibility: PromiseOrValue<BigNumberish>,
    _membership: EmbraceSpaces.MembershipStruct,
    _apps: PromiseOrValue<BigNumberish>[],
    _metadata: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getIdFromHandle(
    _handle: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMemberCount(
    _spaceId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getSpace(
    _spaceId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<EmbraceSpaces.SpaceStructOutput>;

  getSpaceFromHandle(
    _handle: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<EmbraceSpaces.SpaceStructOutput>;

  getSpaceMember(
    _spaceId: PromiseOrValue<BigNumberish>,
    _address: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<EmbraceSpaces.MemberStructOutput>;

  getSpaceMembers(
    _spaceId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string[]>;

  getSpaces(
    overrides?: CallOverrides
  ): Promise<EmbraceSpaces.SpaceStructOutput[]>;

  isAdmin(
    _spaceId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isAdminExternal(
    _spaceId: PromiseOrValue<BigNumberish>,
    _address: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isFounder(
    _spaceId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isFounderExternal(
    _spaceId: PromiseOrValue<BigNumberish>,
    _address: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  joinSpace(
    _spaceId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  meetsGateRequirements(
    _spaceId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  requestJoin(
    _spaceId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setFounder(
    _spaceId: PromiseOrValue<BigNumberish>,
    _address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setMember(
    _spaceId: PromiseOrValue<BigNumberish>,
    _address: PromiseOrValue<string>,
    _isActive: PromiseOrValue<boolean>,
    _isAdmin: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  spaceHandleToId(
    arg0: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  spaceMemberLength(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  spaceMembers(
    arg0: PromiseOrValue<BigNumberish>,
    arg1: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [boolean, boolean, boolean] & {
      isAdmin: boolean;
      isActive: boolean;
      isRequest: boolean;
    }
  >;

  spaceMembersArray(
    arg0: PromiseOrValue<BigNumberish>,
    arg1: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  spaces(
    arg0: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      string,
      string,
      number,
      EmbraceSpaces.MembershipStructOutput,
      string
    ] & {
      id: BigNumber;
      handle: string;
      founder: string;
      visibility: number;
      membership: EmbraceSpaces.MembershipStructOutput;
      metadata: string;
    }
  >;

  callStatic: {
    createSpace(
      _handle: PromiseOrValue<string>,
      _visibility: PromiseOrValue<BigNumberish>,
      _membership: EmbraceSpaces.MembershipStruct,
      _apps: PromiseOrValue<BigNumberish>[],
      _metadata: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    getIdFromHandle(
      _handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMemberCount(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpace(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<EmbraceSpaces.SpaceStructOutput>;

    getSpaceFromHandle(
      _handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<EmbraceSpaces.SpaceStructOutput>;

    getSpaceMember(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<EmbraceSpaces.MemberStructOutput>;

    getSpaceMembers(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string[]>;

    getSpaces(
      overrides?: CallOverrides
    ): Promise<EmbraceSpaces.SpaceStructOutput[]>;

    isAdmin(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isAdminExternal(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isFounder(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isFounderExternal(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    joinSpace(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    meetsGateRequirements(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    requestJoin(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setFounder(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setMember(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      _isActive: PromiseOrValue<boolean>,
      _isAdmin: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    spaceHandleToId(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    spaceMemberLength(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    spaceMembers(
      arg0: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [boolean, boolean, boolean] & {
        isAdmin: boolean;
        isActive: boolean;
        isRequest: boolean;
      }
    >;

    spaceMembersArray(
      arg0: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    spaces(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        string,
        string,
        number,
        EmbraceSpaces.MembershipStructOutput,
        string
      ] & {
        id: BigNumber;
        handle: string;
        founder: string;
        visibility: number;
        membership: EmbraceSpaces.MembershipStructOutput;
        metadata: string;
      }
    >;
  };

  filters: {
    "JoinedSpace(uint256,address,bool)"(
      spaceId?: PromiseOrValue<BigNumberish> | null,
      memberAddress?: PromiseOrValue<string> | null,
      isAdmin?: null
    ): JoinedSpaceEventFilter;
    JoinedSpace(
      spaceId?: PromiseOrValue<BigNumberish> | null,
      memberAddress?: PromiseOrValue<string> | null,
      isAdmin?: null
    ): JoinedSpaceEventFilter;

    "RemovedFromSpace(uint256,address)"(
      spaceId?: PromiseOrValue<BigNumberish> | null,
      memberAddress?: PromiseOrValue<string> | null
    ): RemovedFromSpaceEventFilter;
    RemovedFromSpace(
      spaceId?: PromiseOrValue<BigNumberish> | null,
      memberAddress?: PromiseOrValue<string> | null
    ): RemovedFromSpaceEventFilter;

    "RequestJoinSpace(uint256,address)"(
      spaceId?: PromiseOrValue<BigNumberish> | null,
      memberAddress?: PromiseOrValue<string> | null
    ): RequestJoinSpaceEventFilter;
    RequestJoinSpace(
      spaceId?: PromiseOrValue<BigNumberish> | null,
      memberAddress?: PromiseOrValue<string> | null
    ): RequestJoinSpaceEventFilter;

    "SpaceCreated(uint256,address)"(
      spaceId?: PromiseOrValue<BigNumberish> | null,
      founder?: PromiseOrValue<string> | null
    ): SpaceCreatedEventFilter;
    SpaceCreated(
      spaceId?: PromiseOrValue<BigNumberish> | null,
      founder?: PromiseOrValue<string> | null
    ): SpaceCreatedEventFilter;
  };

  estimateGas: {
    createSpace(
      _handle: PromiseOrValue<string>,
      _visibility: PromiseOrValue<BigNumberish>,
      _membership: EmbraceSpaces.MembershipStruct,
      _apps: PromiseOrValue<BigNumberish>[],
      _metadata: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getIdFromHandle(
      _handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMemberCount(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpace(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpaceFromHandle(
      _handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpaceMember(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpaceMembers(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpaces(overrides?: CallOverrides): Promise<BigNumber>;

    isAdmin(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isAdminExternal(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isFounder(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isFounderExternal(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    joinSpace(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    meetsGateRequirements(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    requestJoin(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setFounder(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setMember(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      _isActive: PromiseOrValue<boolean>,
      _isAdmin: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    spaceHandleToId(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    spaceMemberLength(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    spaceMembers(
      arg0: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    spaceMembersArray(
      arg0: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    spaces(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createSpace(
      _handle: PromiseOrValue<string>,
      _visibility: PromiseOrValue<BigNumberish>,
      _membership: EmbraceSpaces.MembershipStruct,
      _apps: PromiseOrValue<BigNumberish>[],
      _metadata: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getIdFromHandle(
      _handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMemberCount(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSpace(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSpaceFromHandle(
      _handle: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSpaceMember(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSpaceMembers(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSpaces(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    isAdmin(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isAdminExternal(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isFounder(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isFounderExternal(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    joinSpace(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    meetsGateRequirements(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    requestJoin(
      _spaceId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setFounder(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setMember(
      _spaceId: PromiseOrValue<BigNumberish>,
      _address: PromiseOrValue<string>,
      _isActive: PromiseOrValue<boolean>,
      _isAdmin: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    spaceHandleToId(
      arg0: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    spaceMemberLength(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    spaceMembers(
      arg0: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    spaceMembersArray(
      arg0: PromiseOrValue<BigNumberish>,
      arg1: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    spaces(
      arg0: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
